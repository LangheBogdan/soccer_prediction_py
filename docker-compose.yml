version: '3.9'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:16-alpine
    container_name: soccer_prediction_db
    environment:
      POSTGRES_USER: ${DATABASE_USER:-soccer_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-default_password}
      POSTGRES_DB: ${DATABASE_NAME:-soccer_prediction}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-soccer_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - soccer_net
    restart: unless-stopped

  # Python Application Service (FastAPI/Uvicorn)
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: soccer_prediction_web
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME:-soccer_prediction}
      DATABASE_USER: ${DATABASE_USER:-soccer_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-default_password}
      FOOTBALL_DATA_API_KEY: ${FOOTBALL_DATA_API_KEY}
      API_FOOTBALL_API_KEY: ${API_FOOTBALL_API_KEY}
      ODDS_API_KEY: ${ODDS_API_KEY}
      DEBUG: ${DEBUG:-False}
      APP_PORT: 8000
      APP_HOST: 0.0.0.0
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - soccer_net
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local

networks:
  soccer_net:
    driver: bridge